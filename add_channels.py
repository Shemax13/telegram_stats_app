#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
"""

import asyncio
import os
from dotenv import load_dotenv
from telegram_monitor import TelegramChannelMonitor

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('telega.env')

async def add_channels():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    
    # –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    channels_to_add = [
        "shemaxpoetry",    # SheMax Poetry - –≤–∞—à –∫–∞–Ω–∞–ª
        "durov",           # –ö–∞–Ω–∞–ª –ü–∞–≤–ª–∞ –î—É—Ä–æ–≤–∞
        "telegram",        # –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª Telegram
        "python_telegram", # Python Telegram Bot
        # –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–∞–Ω–∞–ª—ã –∑–¥–µ—Å—å:
        # "your_channel_name",
        # "another_channel_name"
    ]
    
    print("üì∫ –ö–∞–Ω–∞–ª—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:")
    for i, channel in enumerate(channels_to_add, 1):
        print(f"  {i}. @{channel}")
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä
    monitor = TelegramChannelMonitor()
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram
        print("\nüîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
        await monitor.connect()
        
        # –°–æ–∑–¥–∞–µ–º —Å–Ω–∏–º–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        for channel in channels_to_add:
            try:
                print(f"\nüì∏ –°–æ–∑–¥–∞–Ω–∏–µ —Å–Ω–∏–º–∫–∞ –∫–∞–Ω–∞–ª–∞ @{channel}...")
                await monitor.take_snapshot(channel)
                print(f"‚úÖ –°–Ω–∏–º–æ–∫ –∫–∞–Ω–∞–ª–∞ @{channel} —Å–æ–∑–¥–∞–Ω")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–Ω–∏–º–∫–∞ @{channel}: {e}")
        
        print(f"\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(channels_to_add)} –∫–∞–Ω–∞–ª–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    finally:
        await monitor.close()
        print("\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")

def show_usage_examples():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    
    print("\nüìñ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
    print("\n1. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:")
    print("""
import asyncio
from telegram_monitor import TelegramChannelMonitor

async def main():
    monitor = TelegramChannelMonitor()
    channels = ["durov", "telegram"]
    
    try:
        await monitor.start_monitoring(channels)
    except KeyboardInterrupt:
        print("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    finally:
        await monitor.close()

asyncio.run(main())
""")
    
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:")
    print("""
from telegram_monitor import TelegramChannelMonitor

monitor = TelegramChannelMonitor()
stats = monitor.get_channel_statistics("durov", days=30)
print(f"–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {stats['joined_count']}")
print(f"–û—Ç–ø–∏—Å–∞–ª–æ—Å—å: {stats['left_count']}")
""")
    
    print("\n3. –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö:")
    print("""
from telegram_monitor import TelegramChannelMonitor

monitor = TelegramChannelMonitor()
monitor.export_data_to_csv("durov", "durov_data.csv")
""")

if __name__ == "__main__":
    print("üöÄ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    show_usage_examples()
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    response = input("\n–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª—ã —Å–µ–π—á–∞—Å? (y/n): ")
    
    if response.lower() in ['y', 'yes', '–¥–∞', '–¥']:
        asyncio.run(add_channels())
    else:
        print("\n–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã—à–µ.") 